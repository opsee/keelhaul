{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The Opsee Bastion Host",
    "Parameters": {
        "InstanceType": {
            "Description": "EC2 Instance type (m3.medium, etc).",
            "Type": "String",
            "Default": "t2.micro",
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "ImageId": {
            "Description": "The Opsee Bastion AMI",
            "Type": "String",
            "ConstraintDescription": "Must be a valid Opsee AMI."
        },
        "UserData": {
            "Description": "Metadata to set for the instance",
            "Type": "String"
        },
        "KeyName": {
            "Description": "The name of a keypair to use (optional)",
            "Default": "",
            "Type": "String"
        },
        "VpcId": {
            "Description": "The VPC in which to deploy the instance",
            "Type": "String",
            "ConstraintDescription": "Must be a valid VPC ID"
        },
        "SubnetId": {
            "Description": "The subnet in which to deploy the instance (optional)",
            "Default": "",
            "Type": "String"
        },
        "AssociatePublicIpAddress": {
            "Description": "Whether or not a public IP address should be associated (optional)",
            "Default": "True",
            "Type": "String",
            "AllowedValues": ["True", "False"]
        },
        "CustomerId": {
            "Description": "Customer ID",
            "Type": "String"
        }
    },
    "Conditions": {
        "NoKey": {
            "Fn::Equals": [{
                    "Ref": "KeyName"
                },
                ""
            ]
        },
        "NoSubnet": {
            "Fn::Equals": [{
                    "Ref": "SubnetId"
                },
                ""
            ]
        },
        "AssociatePublicIp": {
            "Fn::Equals": [{
                    "Ref": "AssociatePublicIpAddress"
                },
                "True"
            ]
        }
    },
    "Resources": {
        "OpseeRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": "933693344490"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {
                            "StringEquals": {
                                "sts:ExternalId": {
                                    "Ref": "CustomerId"
                                }
                            }
                        }
                    }, {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["ec2.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "OpseePolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "autoscaling:DescribeLoadBalancers",
                                "autoscaling:DescribeAutoScalingGroups",
                                "cloudformation:CreateStack",
                                "cloudformation:DeleteStack",
                                "cloudformation:ListStackResources",
                                "ec2:CreateTags",
                                "ec2:DeleteTags",
                                "ec2:AuthorizeSecurityGroupIngress",
                                "ec2:AuthorizeSecurityGroupEgress",
                                "ec2:RevokeSecurityGroupIngress",
                                "ec2:RevokeSecurityGroupEgress",
                                "ec2:StartInstances",
                                "ec2:RunInstances",
                                "ec2:StopInstances",
                                "ec2:RebootInstances",
                                "ec2:TerminateInstances",
                                "ec2:DescribeAccountAttributes",
                                "ec2:DescribeImages",
                                "ec2:DescribeSecurityGroups",
                                "ec2:CreateSecurityGroup",
                                "ec2:DeleteSecurityGroup",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVpcs",
                                "ec2:DescribeInstances",
                                "ec2:DescribeInternetGateways",
                                "ec2:DescribeRouteTables",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "iam:AddRoleToInstanceProfile",
                                "iam:RemoveRoleFromInstanceProfile",
                                "iam:CreateRole",
                                "iam:CreateRolePolicy",
                                "iam:CreateInstanceProfile",
                                "iam:PutRolePolicy",
                                "iam:DeleteRole",
                                "iam:DeleteRolePolicy",
                                "iam:DeleteInstanceProfile",
                                "iam:PassRole",
                                "sns:CreateTopic",
                                "sns:DeleteTopic",
                                "sns:Subscribe",
                                "sns:Unsubscribe",
                                "sns:Publish",
                                "sqs:CreateQueue",
                                "sqs:DeleteQueue",
                                "sqs:DeleteMessage",
                                "sqs:ReceiveMessage",
                                "sqs:GetQueueAttributes",
                                "sqs:SetQueueAttributes",
                                "rds:DescribeDBInstances",
                                "rds:DescribeDBSecurityGroups"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        },
        "BastionSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Bastion SecurityGroup",
                "Tags": [{
                    "Key": "Name",
                    "Value": "Opsee Bastion Security Group"
                }, {
                    "Key": "type",
                    "Value": "opsee"
                }],
                "SecurityGroupEgress": [{
                    "CidrIp": "0.0.0.0/0",
                    "FromPort": -1,
                    "IpProtocol": -1,
                    "ToPort": -1
                }],
                "SecurityGroupIngress": [{
                    "CidrIp": "0.0.0.0/0",
                    "FromPort": 22,
                    "IpProtocol": "tcp",
                    "ToPort": 22
                }],
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "BastionInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [{
                    "Ref": "OpseeRole"
                }]
            }
        },
        "BastionInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "ImageId"
                },
                "IamInstanceProfile": {
                    "Ref": "BastionInstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Fn::If": [
                        "NoKey", {
                            "Ref": "AWS::NoValue"
                        }, {
                            "Ref": "KeyName"
                        }
                    ]
                },
                "NetworkInterfaces": {
                    "Fn::If": [
                        "AssociatePublicIp", [{
                            "DeviceIndex": "0",
                            "AssociatePublicIpAddress": true,
                            "SubnetId": {
                                "Fn::If": [
                                    "NoSubnet", {
                                        "Ref": "AWS::NoValue"
                                    }, {
                                        "Ref": "SubnetId"
                                    }
                                ]
                            },
                            "GroupSet": [{
                                "Ref": "BastionSecurityGroup"
                            }]
                        }], {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "SubnetId": {
                    "Fn::If": [
                        "AssociatePublicIp", {
                            "Ref": "AWS::NoValue"
                        }, {
                            "Fn::If": [
                                "NoSubnet", {
                                    "Ref": "AWS::NoValue"
                                }, {
                                    "Ref": "SubnetId"
                                }
                            ]
                        }
                    ]
                },
                "SecurityGroupIds": {
                    "Fn::If": [
                        "AssociatePublicIp", {
                            "Ref": "AWS::NoValue"
                        },
                        [{
                            "Ref": "BastionSecurityGroup"
                        }]
                    ]
                },
                "UserData": {
                    "Ref": "UserData"
                }
            }
        }
    }
}